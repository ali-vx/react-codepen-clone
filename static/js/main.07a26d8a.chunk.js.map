{"version":3,"sources":["components/Editor.jsx","hooks/useLocalStorage.js","components/App.jsx","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","onClick","prevOpen","type","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lineNumbers","mode","lint","theme","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAUaA,EAAS,SAACC,GACrB,IACEC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,SAGF,EAAuBC,oBAAS,GAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KAOA,OACE,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAC9C,yBAAKE,UAAU,gBACZN,EACD,4BACAO,QAAS,kBACTF,GAAQ,SAAAG,GAAQ,OAAKA,MACrBC,KAAK,SACLH,UAAU,uBACR,kBAAC,IAAD,CAAiBI,KAAMN,EAAOO,IAAgBC,QAGlD,kBAAC,aAAD,CACAC,eAlBiB,SAACC,EAAQC,EAAMd,GAClCC,EAASD,IAkBPA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACPC,cAAc,EACdC,aAAa,EACbC,KAAMpB,EACNqB,MAAM,EACNC,MAAO,gBC1CA,SAASC,EAAgBC,EAAKC,GAC5C,IAAMC,EAHQ,iBAGeF,EAC7B,EAA0BpB,oBAAS,WAClC,IAAMuB,EAAYC,aAAaC,QAAQH,GAEvC,OAAkB,OAAdC,EAA2BG,KAAKC,MAAMJ,GACd,oBAAjBF,EACHA,IAEAA,KAPT,mBAAOvB,EAAP,KAAc8B,EAAd,KAcA,OAHAC,qBAAU,WACTL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAC/C,CAACwB,EAAaxB,IACV,CAACA,EAAO8B,GCsCDI,MAtDf,WACC,MAAuBb,EAAgB,OAAQ,IAA/C,mBAAOc,EAAP,KAAYC,EAAZ,KACA,EAAqBf,EAAgB,MAAO,IAA5C,mBAAOgB,EAAP,KAAWC,EAAX,KACA,EAAmBjB,EAAgB,KAAM,IAAzC,mBAAOkB,EAAP,KAAUC,EAAV,KACA,EAA2BtC,mBAAS,IAApC,mBAAOuC,EAAP,KAAcC,EAAd,KAgBA,OAdAX,qBAAU,WACT,IAAMY,EAAUC,YAAW,WAC1BF,EAAU,iCAAD,OAEAP,EAFA,mCAGCE,EAHD,qCAIEE,EAJF,wCAOP,KAEH,OAAO,kBAAMM,aAAaF,MACxB,CAACR,EAAKE,EAAIE,IAGZ,oCACC,yBAAKlC,UAAU,iBACd,kBAAC,EAAD,CACAP,SAAS,MACTC,YAAY,OACZC,MAAOmC,EACPlC,SAAUmC,IAEV,kBAAC,EAAD,CACAtC,SAAS,MACTC,YAAY,MACZC,MAAOqC,EACPpC,SAAUqC,IACV,kBAAC,EAAD,CACAxC,SAAS,aACTC,YAAY,KACZC,MAAOuC,EACPtC,SAAUuC,KAEX,yBAAKnC,UAAU,QACd,4BACAoC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YC9CXC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,W","file":"static/js/main.07a26d8a.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const Editor = (props) => {\r\n  const {\r\n    language,\r\n    displayName,\r\n    value,\r\n    onChange,\r\n  } = props;\r\n\r\n  const [open,setOpen] = useState(true);\r\n\r\n  const handleChange = (editor, data, value) => {\r\n    onChange(value);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n      <div className=\"editor-title\">\r\n        {displayName}\r\n        <button \r\n        onClick={() => \r\n        setOpen(prevOpen => !prevOpen)} \r\n        type=\"button\" \r\n        className=\"expand-collapse-btn\">\r\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n        </button>\r\n      </div>\r\n      <ControlledEditor \r\n      onBeforeChange={handleChange}\r\n      value={value}\r\n      className=\"code-mirror-wrapper\"\r\n      options={{\r\n        lineWrapping: true,\r\n        lineNumbers: true,\r\n        mode: language,\r\n        lint: true,\r\n        theme: 'material',\r\n      }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst PREFIX = \"codepen-clone-\";\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n\tconst prefixedKey = PREFIX + key;\r\n\tconst [value, setValue] = useState(() => {\r\n\t\tconst jsonValue = localStorage.getItem(prefixedKey);\r\n\r\n\t\tif (jsonValue !== null) return JSON.parse(jsonValue);\r\n\t\tif (typeof initialValue === \"function\") {\r\n\t\t\treturn initialValue();\r\n\t\t} else {\r\n\t\t\treturn initialValue;\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(prefixedKey, JSON.stringify(value));\r\n\t}, [prefixedKey, value]);\r\n\treturn [value, setValue];\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport {Editor} from './Editor';\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nfunction App() {\n\tconst [html,setHtml] = useLocalStorage('html', '');\n\tconst [css,setCss] = useLocalStorage('css', '');\n\tconst [js,setJs] = useLocalStorage('js', '');\n\tconst [srcDoc,setSrcDoc] = useState('');\n\n\tuseEffect(() => {\n\t\tconst timeout = setTimeout(() => {\n\t\t\tsetSrcDoc(`\n\t\t\t<html>\n\t\t\t\t<body>${html}</body>\n\t\t\t\t<style>${css}</style>\n\t\t\t\t<script>${js}</script>\n\t\t\t</html>\n\t\t\t`);\n\t\t}, 250);\n\n\t\treturn () => clearTimeout(timeout);\n\t}, [html,css,js])\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"pane top-pane\">\n\t\t\t\t<Editor \n\t\t\t\tlanguage=\"xml\" \n\t\t\t\tdisplayName=\"HTML\"\n\t\t\t\tvalue={html}\n\t\t\t\tonChange={setHtml}\n\t\t\t\t/>\n\t\t\t\t<Editor \n\t\t\t\tlanguage=\"css\" \n\t\t\t\tdisplayName=\"CSS\"\n\t\t\t\tvalue={css}\n\t\t\t\tonChange={setCss}/>\n\t\t\t\t<Editor \n\t\t\t\tlanguage=\"javascript\" \n\t\t\t\tdisplayName=\"JS\"\n\t\t\t\tvalue={js}\n\t\t\t\tonChange={setJs}/>\n\t\t\t</div>\n\t\t\t<div className=\"pane\">\n\t\t\t\t<iframe \n\t\t\t\tsrcDoc={srcDoc}\n\t\t\t\ttitle=\"output\" \n\t\t\t\tsandbox=\"allow-scripts\"\n\t\t\t\tframeBorder=\"0\"\n\t\t\t\twidth=\"100%\"\n\t\t\t\theight=\"100%\"\n\t\t\t\t></iframe>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\"),\n);\n"],"sourceRoot":""}